
//-------- DO NOT EDIT THIS FILE --------
//
// FILE WAS GENERATED AUTOMATICALY USING AMISDL v7.04.0230 (ËÄÔÂ 25 2018,16:31:29)
//
//-------- DO NOT EDIT THIS FILE --------
//****************************************************************************
//****************************************************************************
//**                                                                        **
//**         (C)Copyright 1985 - 2018, American Megatrends, Inc.            **
//**                                                                        **
//**                          All Rights Reserved.                          **
//**                                                                        **
//**                    5555 Oakbrook Pkwy, Norcross, GA 30092              **
//**                                                                        **
//**                          Phone (770)-246-8600                          **
//**                                                                        **
//****************************************************************************
//****************************************************************************
//---------------------------------------------------------------------------
// Begin System IRQ Routing Packages
//---------------------------------------------------------------------------
Scope(\_SB) {

//---------------------------------------------------------------------------
// List of IRQ resource buffers compatible with _PRS return format.
//---------------------------------------------------------------------------
// Naming legend:
// RSxy, PRSy - name of the IRQ resource buffer to be returned by _PRS, "xy" - last two characters of IRQ Link name.
// Note. PRSy name is generated if IRQ Link name starts from "LNK".
// HLxy , LLxy - reference names, can be used to access bit mask of available IRQs. HL and LL stand for active High(Low) Level triggered Irq model.
//---------------------------------------------------------------------------
	Name(PRSA, ResourceTemplate(){	// Link name: LNKA
		IRQ(Level, ActiveLow, Shared, LLKA) {3,4,5,6,7,10,11,12,14,15}
	})
	Alias(PRSA,PRSB)	// Link name: LNKB
	Name(PRSC, ResourceTemplate(){	// Link name: LNKC
		IRQ(Level, ActiveLow, Shared, LLKC) {3,4,5,6,10,11,12,14,15}
	})
	Alias(PRSC,PRSD)	// Link name: LNKD
	Alias(PRSA,PRSE)	// Link name: LNKE
	Alias(PRSA,PRSF)	// Link name: LNKF
	Alias(PRSA,PRSG)	// Link name: LNKG
	Alias(PRSA,PRSH)	// Link name: LNKH

	Name(PG1A, Package(){
// BMC PCI Bridge
		Package(){0x0000FFFF, 0, LNKA, 0 },
	})
	Name(AG1A, Package(){
// BMC PCI Bridge
		Package(){0x0000FFFF, 0, 0, 16 },
	})
	Name(PG1B, Package(){
// OnBoard I350
		Package(){0x0000FFFF, 0, LNKA, 0 },
		Package(){0x0000FFFF, 1, LNKB, 0 },
		Package(){0x0000FFFF, 2, LNKC, 0 },
		Package(){0x0000FFFF, 3, LNKD, 0 },
// UEFI LAN I350
	})
	Name(AG1B, Package(){
// OnBoard I350
		Package(){0x0000FFFF, 0, 0, 32 },
		Package(){0x0000FFFF, 1, 0, 36 },
		Package(){0x0000FFFF, 2, 0, 37 },
		Package(){0x0000FFFF, 3, 0, 38 },
// UEFI LAN I350
	})
	Name(PR00, Package(){
// LpcBridge
// PCI Bridge
// SATA #0
		Package(){0x001FFFFF, 0, LNKA, 0 },
// SATA#1
// UEFI SATA RAID Controller
// SmbusController
		Package(){0x001FFFFF, 2, LNKC, 0 },
// ThermalController
// XHCI Controller
		Package(){0x0014FFFF, 3, LNKD, 0 },
// Gigabit LAN
		Package(){0x0019FFFF, 0, LNKE, 0 },
// EHCI#0
		Package(){0x001DFFFF, 2, LNKC, 0 },
// EHCI#1
		Package(){0x001AFFFF, 2, LNKC, 0 },
// High Definition Audio
		Package(){0x001BFFFF, 0, LNKG, 0 },
// HECI Host #1
		Package(){0x0016FFFF, 0, LNKA, 0 },
// HECI Host #2
		Package(){0x0016FFFF, 1, LNKB, 0 },
// IDER Controller
// KT Controller
// PCIE Root Port #0
		Package(){0x001CFFFF, 0, LNKA, 0 },
// PCIE Root Port #1
		Package(){0x001CFFFF, 1, LNKB, 0 },
// PCIE Root Port #2
		Package(){0x001CFFFF, 2, LNKC, 0 },
// PCIE Root Port #3
		Package(){0x001CFFFF, 3, LNKD, 0 },
// PCIE Root Port #4
// PCIE Root Port #5
// PCIE Root Port #6
// PCIE Root Port #7
// EVA MROM function
// EVA MS Unit SMBUS 0
		Package(){0x0011FFFF, 1, LNKB, 0 },
// EVA MS Unit SMBUS 1
		Package(){0x0011FFFF, 2, LNKC, 0 },
// EVA MS Unit SMBUS 2
		Package(){0x0011FFFF, 3, LNKD, 0 },
// EVA sSATA controller 1
		Package(){0x0011FFFF, 0, LNKA, 0 },
// UEFI sSATA RAID Controller
// NB PCI-E Root Port #0 (DMI)
		Package(){0x0000FFFF, 0, LNKA, 0 },
		Package(){0x0000FFFF, 1, LNKB, 0 },
		Package(){0x0000FFFF, 2, LNKC, 0 },
		Package(){0x0000FFFF, 3, LNKD, 0 },
// NB PCI-E Root Port #1
		Package(){0x0001FFFF, 0, LNKA, 0 },
		Package(){0x0001FFFF, 1, LNKB, 0 },
		Package(){0x0001FFFF, 2, LNKC, 0 },
		Package(){0x0001FFFF, 3, LNKD, 0 },
// NB PCI-E Root Port #2
// NB PCI-E Root Port #3
		Package(){0x0002FFFF, 0, LNKA, 0 },
		Package(){0x0002FFFF, 1, LNKB, 0 },
		Package(){0x0002FFFF, 2, LNKC, 0 },
		Package(){0x0002FFFF, 3, LNKD, 0 },
// NB PCI-E Root Port #4
// NB PCI-E Root Port #5
// NB PCI-E Root Port #6
// NB PCI-E Root Port #7
		Package(){0x0003FFFF, 0, LNKA, 0 },
		Package(){0x0003FFFF, 1, LNKB, 0 },
		Package(){0x0003FFFF, 2, LNKC, 0 },
		Package(){0x0003FFFF, 3, LNKD, 0 },
// NB PCI-E Root Port #8
// NB PCI-E Root Port #9
// NB PCI-E Root Port #a
// NB Crystal Beach DMA Engine Fn00
		Package(){0x0004FFFF, 0, LNKA, 0 },
// NB Crystal Beach DMA Engine Fn01
		Package(){0x0004FFFF, 1, LNKB, 0 },
// NB Crystal Beach DMA Engine Fn02
		Package(){0x0004FFFF, 2, LNKC, 0 },
// NB Crystal Beach DMA Engine Fn03
		Package(){0x0004FFFF, 3, LNKD, 0 },
// NB Crystal Beach DMA Engine Fn04
// NB Crystal Beach DMA Engine Fn05
// NB Crystal Beach DMA Engine Fn06
// NB Crystal Beach DMA Engine Fn07
	})
	Name(AR00, Package(){
// LpcBridge
// PCI Bridge
// SATA #0
		Package(){0x001FFFFF, 0, 0, 16 },
// SATA#1
// UEFI SATA RAID Controller
// SmbusController
		Package(){0x001FFFFF, 2, 0, 18 },
// ThermalController
// XHCI Controller
		Package(){0x0014FFFF, 3, 0, 19 },
// Gigabit LAN
		Package(){0x0019FFFF, 0, 0, 20 },
// EHCI#0
		Package(){0x001DFFFF, 2, 0, 18 },
// EHCI#1
		Package(){0x001AFFFF, 2, 0, 18 },
// High Definition Audio
		Package(){0x001BFFFF, 0, 0, 22 },
// HECI Host #1
		Package(){0x0016FFFF, 0, 0, 16 },
// HECI Host #2
		Package(){0x0016FFFF, 1, 0, 17 },
// IDER Controller
// KT Controller
// PCIE Root Port #0
		Package(){0x001CFFFF, 0, 0, 16 },
// PCIE Root Port #1
		Package(){0x001CFFFF, 1, 0, 17 },
// PCIE Root Port #2
		Package(){0x001CFFFF, 2, 0, 18 },
// PCIE Root Port #3
		Package(){0x001CFFFF, 3, 0, 19 },
// PCIE Root Port #4
// PCIE Root Port #5
// PCIE Root Port #6
// PCIE Root Port #7
// EVA MROM function
// EVA MS Unit SMBUS 0
		Package(){0x0011FFFF, 1, 0, 17 },
// EVA MS Unit SMBUS 1
		Package(){0x0011FFFF, 2, 0, 18 },
// EVA MS Unit SMBUS 2
		Package(){0x0011FFFF, 3, 0, 19 },
// EVA sSATA controller 1
		Package(){0x0011FFFF, 0, 0, 16 },
// UEFI sSATA RAID Controller
// NB PCI-E Root Port #0 (DMI)
		Package(){0x0000FFFF, 0, 0, 24 },
		Package(){0x0000FFFF, 1, 0, 25 },
		Package(){0x0000FFFF, 2, 0, 25 },
		Package(){0x0000FFFF, 3, 0, 25 },
// NB PCI-E Root Port #1
		Package(){0x0001FFFF, 0, 0, 26 },
		Package(){0x0001FFFF, 1, 0, 28 },
		Package(){0x0001FFFF, 2, 0, 29 },
		Package(){0x0001FFFF, 3, 0, 30 },
// NB PCI-E Root Port #2
// NB PCI-E Root Port #3
		Package(){0x0002FFFF, 0, 0, 32 },
		Package(){0x0002FFFF, 1, 0, 36 },
		Package(){0x0002FFFF, 2, 0, 37 },
		Package(){0x0002FFFF, 3, 0, 38 },
// NB PCI-E Root Port #4
// NB PCI-E Root Port #5
// NB PCI-E Root Port #6
// NB PCI-E Root Port #7
		Package(){0x0003FFFF, 0, 0, 40 },
		Package(){0x0003FFFF, 1, 0, 44 },
		Package(){0x0003FFFF, 2, 0, 45 },
		Package(){0x0003FFFF, 3, 0, 46 },
// NB PCI-E Root Port #8
// NB PCI-E Root Port #9
// NB PCI-E Root Port #a
// NB Crystal Beach DMA Engine Fn00
		Package(){0x0004FFFF, 0, 0, 31 },
// NB Crystal Beach DMA Engine Fn01
		Package(){0x0004FFFF, 1, 0, 39 },
// NB Crystal Beach DMA Engine Fn02
		Package(){0x0004FFFF, 2, 0, 31 },
// NB Crystal Beach DMA Engine Fn03
		Package(){0x0004FFFF, 3, 0, 39 },
// NB Crystal Beach DMA Engine Fn04
// NB Crystal Beach DMA Engine Fn05
// NB Crystal Beach DMA Engine Fn06
// NB Crystal Beach DMA Engine Fn07
	})
	Name(PG28, Package(){
// 10G Mezzanine Slot x8: (D1:F0)NB PCI-E Root Port  #1
		Package(){0x0000FFFF, 0, LNKA, 0 },
		Package(){0x0000FFFF, 1, LNKB, 0 },
		Package(){0x0000FFFF, 2, LNKC, 0 },
		Package(){0x0000FFFF, 3, LNKD, 0 },
	})
	Name(AG28, Package(){
// 10G Mezzanine Slot x8: (D1:F0)NB PCI-E Root Port  #1
		Package(){0x0000FFFF, 0, 0, 26 },
		Package(){0x0000FFFF, 1, 0, 28 },
		Package(){0x0000FFFF, 2, 0, 29 },
		Package(){0x0000FFFF, 3, 0, 30 },
	})
	Name(PG2A, Package(){
// Slot1 x16/x8: (D2:F0)NB PCI-E Root Port #3
		Package(){0x0000FFFF, 0, LNKA, 0 },
		Package(){0x0000FFFF, 1, LNKB, 0 },
		Package(){0x0000FFFF, 2, LNKC, 0 },
		Package(){0x0000FFFF, 3, LNKD, 0 },
	})
	Name(AG2A, Package(){
// Slot1 x16/x8: (D2:F0)NB PCI-E Root Port #3
		Package(){0x0000FFFF, 0, 0, 32 },
		Package(){0x0000FFFF, 1, 0, 36 },
		Package(){0x0000FFFF, 2, 0, 37 },
		Package(){0x0000FFFF, 3, 0, 38 },
	})
	Name(PG2C, Package(){
// Slot3 x8: (D2:F2)NB PCI-E Root Port #5
		Package(){0x0000FFFF, 0, LNKA, 0 },
		Package(){0x0000FFFF, 1, LNKB, 0 },
		Package(){0x0000FFFF, 2, LNKC, 0 },
		Package(){0x0000FFFF, 3, LNKD, 0 },
	})
	Name(AG2C, Package(){
// Slot3 x8: (D2:F2)NB PCI-E Root Port #5
		Package(){0x0000FFFF, 0, 0, 34 },
		Package(){0x0000FFFF, 1, 0, 37 },
		Package(){0x0000FFFF, 2, 0, 36 },
		Package(){0x0000FFFF, 3, 0, 38 },
	})
	Name(PG2E, Package(){
// SAS Mezzanine x8: (D3:F0)NB PCI-E Root Port #7
		Package(){0x0000FFFF, 0, LNKA, 0 },
		Package(){0x0000FFFF, 1, LNKB, 0 },
		Package(){0x0000FFFF, 2, LNKC, 0 },
		Package(){0x0000FFFF, 3, LNKD, 0 },
	})
	Name(AG2E, Package(){
// SAS Mezzanine x8: (D3:F0)NB PCI-E Root Port #7
		Package(){0x0000FFFF, 0, 0, 40 },
		Package(){0x0000FFFF, 1, 0, 44 },
		Package(){0x0000FFFF, 2, 0, 45 },
		Package(){0x0000FFFF, 3, 0, 46 },
	})
	Name(PG30, Package(){
// OnBoard I350: (D3:F2)NB PCI-E Root Port #9
		Package(){0x0000FFFF, 0, LNKA, 0 },
		Package(){0x0000FFFF, 1, LNKB, 0 },
		Package(){0x0000FFFF, 2, LNKC, 0 },
		Package(){0x0000FFFF, 3, LNKD, 0 },
// UEFI LAN I350: (D3:F2)NB PCI-E Root Port #9
	})
	Name(AG30, Package(){
// OnBoard I350: (D3:F2)NB PCI-E Root Port #9
		Package(){0x0000FFFF, 0, 0, 32 },
		Package(){0x0000FFFF, 1, 0, 36 },
		Package(){0x0000FFFF, 2, 0, 37 },
		Package(){0x0000FFFF, 3, 0, 38 },
// UEFI LAN I350: (D3:F2)NB PCI-E Root Port #9
	})
	Name(PG31, Package(){
// Slot3 x4: (D3:F3)NB PCI-E Root Port #a
		Package(){0x0000FFFF, 0, LNKA, 0 },
		Package(){0x0000FFFF, 1, LNKB, 0 },
		Package(){0x0000FFFF, 2, LNKC, 0 },
		Package(){0x0000FFFF, 3, LNKD, 0 },
	})
	Name(AG31, Package(){
// Slot3 x4: (D3:F3)NB PCI-E Root Port #a
		Package(){0x0000FFFF, 0, 0, 34 },
		Package(){0x0000FFFF, 1, 0, 37 },
		Package(){0x0000FFFF, 2, 0, 36 },
		Package(){0x0000FFFF, 3, 0, 38 },
	})
	Name(PR40, Package(){
// NB1 PCI-E Root Port #0 (D0, F0)
		Package(){0x0000FFFF, 0, LNKA, 0 },
		Package(){0x0000FFFF, 1, LNKB, 0 },
		Package(){0x0000FFFF, 2, LNKC, 0 },
		Package(){0x0000FFFF, 3, LNKD, 0 },
// NB1 PCI-E Root Port #1
		Package(){0x0001FFFF, 0, LNKA, 0 },
		Package(){0x0001FFFF, 1, LNKB, 0 },
		Package(){0x0001FFFF, 2, LNKC, 0 },
		Package(){0x0001FFFF, 3, LNKD, 0 },
// NB1 PCI-E Root Port #2
// NB1 PCI-E Root Port #3
		Package(){0x0002FFFF, 0, LNKA, 0 },
		Package(){0x0002FFFF, 1, LNKB, 0 },
		Package(){0x0002FFFF, 2, LNKC, 0 },
		Package(){0x0002FFFF, 3, LNKD, 0 },
// NB1 PCI-E Root Port #4
// NB1 PCI-E Root Port #5
// NB1 PCI-E Root Port #6
// NB1 PCI-E Root Port #7
		Package(){0x0003FFFF, 0, LNKA, 0 },
		Package(){0x0003FFFF, 1, LNKB, 0 },
		Package(){0x0003FFFF, 2, LNKC, 0 },
		Package(){0x0003FFFF, 3, LNKD, 0 },
// NB1 PCI-E Root Port #8
// NB1 PCI-E Root Port #9
// NB1 PCI-E Root Port #a
// NB1 Crystal Beach DMA Engine Fn00
		Package(){0x0004FFFF, 0, LNKA, 0 },
// NB1 Crystal Beach DMA Engine Fn01
		Package(){0x0004FFFF, 1, LNKB, 0 },
// NB1 Crystal Beach DMA Engine Fn02
		Package(){0x0004FFFF, 2, LNKC, 0 },
// NB1 Crystal Beach DMA Engine Fn03
		Package(){0x0004FFFF, 3, LNKD, 0 },
// NB1 Crystal Beach DMA Engine Fn04
// NB1 Crystal Beach DMA Engine Fn05
// NB1 Crystal Beach DMA Engine Fn06
// NB1 Crystal Beach DMA Engine Fn07
	})
	Name(AR40, Package(){
// NB1 PCI-E Root Port #0 (D0, F0)
		Package(){0x0000FFFF, 0, 0, 48 },
		Package(){0x0000FFFF, 1, 0, 49 },
		Package(){0x0000FFFF, 2, 0, 49 },
		Package(){0x0000FFFF, 3, 0, 49 },
// NB1 PCI-E Root Port #1
		Package(){0x0001FFFF, 0, 0, 50 },
		Package(){0x0001FFFF, 1, 0, 52 },
		Package(){0x0001FFFF, 2, 0, 53 },
		Package(){0x0001FFFF, 3, 0, 54 },
// NB1 PCI-E Root Port #2
// NB1 PCI-E Root Port #3
		Package(){0x0002FFFF, 0, 0, 56 },
		Package(){0x0002FFFF, 1, 0, 60 },
		Package(){0x0002FFFF, 2, 0, 61 },
		Package(){0x0002FFFF, 3, 0, 62 },
// NB1 PCI-E Root Port #4
// NB1 PCI-E Root Port #5
// NB1 PCI-E Root Port #6
// NB1 PCI-E Root Port #7
		Package(){0x0003FFFF, 0, 0, 64 },
		Package(){0x0003FFFF, 1, 0, 68 },
		Package(){0x0003FFFF, 2, 0, 69 },
		Package(){0x0003FFFF, 3, 0, 70 },
// NB1 PCI-E Root Port #8
// NB1 PCI-E Root Port #9
// NB1 PCI-E Root Port #a
// NB1 Crystal Beach DMA Engine Fn00
		Package(){0x0004FFFF, 0, 0, 55 },
// NB1 Crystal Beach DMA Engine Fn01
		Package(){0x0004FFFF, 1, 0, 63 },
// NB1 Crystal Beach DMA Engine Fn02
		Package(){0x0004FFFF, 2, 0, 55 },
// NB1 Crystal Beach DMA Engine Fn03
		Package(){0x0004FFFF, 3, 0, 63 },
// NB1 Crystal Beach DMA Engine Fn04
// NB1 Crystal Beach DMA Engine Fn05
// NB1 Crystal Beach DMA Engine Fn06
// NB1 Crystal Beach DMA Engine Fn07
	})
	Name(PG34, Package(){
// Slot4 x8: (D1:F0)NB1 PCI-E Root Port #1
		Package(){0x0000FFFF, 0, LNKA, 0 },
		Package(){0x0000FFFF, 1, LNKB, 0 },
		Package(){0x0000FFFF, 2, LNKC, 0 },
		Package(){0x0000FFFF, 3, LNKD, 0 },
	})
	Name(AG34, Package(){
// Slot4 x8: (D1:F0)NB1 PCI-E Root Port #1
		Package(){0x0000FFFF, 0, 0, 50 },
		Package(){0x0000FFFF, 1, 0, 52 },
		Package(){0x0000FFFF, 2, 0, 53 },
		Package(){0x0000FFFF, 3, 0, 54 },
	})
	Name(PG36, Package(){
// Slot7 x4: (D2:F0)NB1 PCI-E Root Port #3
		Package(){0x0000FFFF, 0, LNKA, 0 },
		Package(){0x0000FFFF, 1, LNKB, 0 },
		Package(){0x0000FFFF, 2, LNKC, 0 },
		Package(){0x0000FFFF, 3, LNKD, 0 },
	})
	Name(AG36, Package(){
// Slot7 x4: (D2:F0)NB1 PCI-E Root Port #3
		Package(){0x0000FFFF, 0, 0, 56 },
		Package(){0x0000FFFF, 1, 0, 60 },
		Package(){0x0000FFFF, 2, 0, 61 },
		Package(){0x0000FFFF, 3, 0, 62 },
	})
	Name(PG37, Package(){
// Slot8 x4: (D2:F1)NB1 PCI-E Root Port #4
		Package(){0x0000FFFF, 0, LNKA, 0 },
		Package(){0x0000FFFF, 1, LNKB, 0 },
		Package(){0x0000FFFF, 2, LNKC, 0 },
		Package(){0x0000FFFF, 3, LNKD, 0 },
	})
	Name(AG37, Package(){
// Slot8 x4: (D2:F1)NB1 PCI-E Root Port #4
		Package(){0x0000FFFF, 0, 0, 64 },
		Package(){0x0000FFFF, 1, 0, 68 },
		Package(){0x0000FFFF, 2, 0, 69 },
		Package(){0x0000FFFF, 3, 0, 70 },
	})
	Name(PG38, Package(){
// Slot9 x4: (D2:F2)NB1 PCI-E Root Port #5
		Package(){0x0000FFFF, 0, LNKA, 0 },
		Package(){0x0000FFFF, 1, LNKB, 0 },
		Package(){0x0000FFFF, 2, LNKC, 0 },
		Package(){0x0000FFFF, 3, LNKD, 0 },
	})
	Name(AG38, Package(){
// Slot9 x4: (D2:F2)NB1 PCI-E Root Port #5
		Package(){0x0000FFFF, 0, 0, 56 },
		Package(){0x0000FFFF, 1, 0, 61 },
		Package(){0x0000FFFF, 2, 0, 60 },
		Package(){0x0000FFFF, 3, 0, 62 },
	})
	Name(PG39, Package(){
// Slot10 x4: (D2:F3)NB1 PCI-E Root Port #6
		Package(){0x0000FFFF, 0, LNKA, 0 },
		Package(){0x0000FFFF, 1, LNKB, 0 },
		Package(){0x0000FFFF, 2, LNKC, 0 },
		Package(){0x0000FFFF, 3, LNKD, 0 },
	})
	Name(AG39, Package(){
// Slot10 x4: (D2:F3)NB1 PCI-E Root Port #6
		Package(){0x0000FFFF, 0, 0, 64 },
		Package(){0x0000FFFF, 1, 0, 69 },
		Package(){0x0000FFFF, 2, 0, 68 },
		Package(){0x0000FFFF, 3, 0, 70 },
	})
	Name(PG3A, Package(){
// Slot2 x16/x8: (D3:F0)NB1 PCI-E Root Port #7
		Package(){0x0000FFFF, 0, LNKA, 0 },
		Package(){0x0000FFFF, 1, LNKB, 0 },
		Package(){0x0000FFFF, 2, LNKC, 0 },
		Package(){0x0000FFFF, 3, LNKD, 0 },
	})
	Name(AG3A, Package(){
// Slot2 x16/x8: (D3:F0)NB1 PCI-E Root Port #7
		Package(){0x0000FFFF, 0, 0, 64 },
		Package(){0x0000FFFF, 1, 0, 68 },
		Package(){0x0000FFFF, 2, 0, 69 },
		Package(){0x0000FFFF, 3, 0, 70 },
	})
	Name(PG3C, Package(){
// Slot4 x8: (D3:F2)NB1 PCI-E Root Port #9
		Package(){0x0000FFFF, 0, LNKA, 0 },
		Package(){0x0000FFFF, 1, LNKB, 0 },
		Package(){0x0000FFFF, 2, LNKC, 0 },
		Package(){0x0000FFFF, 3, LNKD, 0 },
	})
	Name(AG3C, Package(){
// Slot4 x8: (D3:F2)NB1 PCI-E Root Port #9
		Package(){0x0000FFFF, 0, 0, 66 },
		Package(){0x0000FFFF, 1, 0, 69 },
		Package(){0x0000FFFF, 2, 0, 68 },
		Package(){0x0000FFFF, 3, 0, 70 },
	})
	Name(PR80, Package(){
// NB2 PCI-E Root Port #0
		Package(){0x0000FFFF, 0, LNKA, 0 },
		Package(){0x0000FFFF, 1, LNKB, 0 },
		Package(){0x0000FFFF, 2, LNKC, 0 },
		Package(){0x0000FFFF, 3, LNKD, 0 },
// NB2 PCI-E Root Port #1
		Package(){0x0001FFFF, 0, LNKA, 0 },
		Package(){0x0001FFFF, 1, LNKB, 0 },
		Package(){0x0001FFFF, 2, LNKC, 0 },
		Package(){0x0001FFFF, 3, LNKD, 0 },
// NB2 PCI-E Root Port #2
// NB2 PCI-E Root Port #3
		Package(){0x0002FFFF, 0, LNKA, 0 },
		Package(){0x0002FFFF, 1, LNKB, 0 },
		Package(){0x0002FFFF, 2, LNKC, 0 },
		Package(){0x0002FFFF, 3, LNKD, 0 },
// NB2 PCI-E Root Port #4
// NB2 PCI-E Root Port #5
// NB2 PCI-E Root Port #6
// NB2 PCI-E Root Port #7
		Package(){0x0003FFFF, 0, LNKA, 0 },
		Package(){0x0003FFFF, 1, LNKB, 0 },
		Package(){0x0003FFFF, 2, LNKC, 0 },
		Package(){0x0003FFFF, 3, LNKD, 0 },
// NB2 PCI-E Root Port #8
// NB2 PCI-E Root Port #9
// NB2 PCI-E Root Port #a
// NB2 Crystal Beach DMA Engine Fn00
		Package(){0x0004FFFF, 0, LNKA, 0 },
// NB2 Crystal Beach DMA Engine Fn01
		Package(){0x0004FFFF, 1, LNKB, 0 },
// NB2 Crystal Beach DMA Engine Fn02
		Package(){0x0004FFFF, 2, LNKC, 0 },
// NB2 Crystal Beach DMA Engine Fn03
		Package(){0x0004FFFF, 3, LNKD, 0 },
// NB2 Crystal Beach DMA Engine Fn04
// NB2 Crystal Beach DMA Engine Fn05
// NB2 Crystal Beach DMA Engine Fn06
// NB2 Crystal Beach DMA Engine Fn07
	})
	Name(AR80, Package(){
// NB2 PCI-E Root Port #0
		Package(){0x0000FFFF, 0, 0, 72 },
		Package(){0x0000FFFF, 1, 0, 73 },
		Package(){0x0000FFFF, 2, 0, 73 },
		Package(){0x0000FFFF, 3, 0, 73 },
// NB2 PCI-E Root Port #1
		Package(){0x0001FFFF, 0, 0, 74 },
		Package(){0x0001FFFF, 1, 0, 76 },
		Package(){0x0001FFFF, 2, 0, 77 },
		Package(){0x0001FFFF, 3, 0, 78 },
// NB2 PCI-E Root Port #2
// NB2 PCI-E Root Port #3
		Package(){0x0002FFFF, 0, 0, 80 },
		Package(){0x0002FFFF, 1, 0, 84 },
		Package(){0x0002FFFF, 2, 0, 85 },
		Package(){0x0002FFFF, 3, 0, 86 },
// NB2 PCI-E Root Port #4
// NB2 PCI-E Root Port #5
// NB2 PCI-E Root Port #6
// NB2 PCI-E Root Port #7
		Package(){0x0003FFFF, 0, 0, 88 },
		Package(){0x0003FFFF, 1, 0, 92 },
		Package(){0x0003FFFF, 2, 0, 93 },
		Package(){0x0003FFFF, 3, 0, 94 },
// NB2 PCI-E Root Port #8
// NB2 PCI-E Root Port #9
// NB2 PCI-E Root Port #a
// NB2 Crystal Beach DMA Engine Fn00
		Package(){0x0004FFFF, 0, 0, 79 },
// NB2 Crystal Beach DMA Engine Fn01
		Package(){0x0004FFFF, 1, 0, 87 },
// NB2 Crystal Beach DMA Engine Fn02
		Package(){0x0004FFFF, 2, 0, 79 },
// NB2 Crystal Beach DMA Engine Fn03
		Package(){0x0004FFFF, 3, 0, 87 },
// NB2 Crystal Beach DMA Engine Fn04
// NB2 Crystal Beach DMA Engine Fn05
// NB2 Crystal Beach DMA Engine Fn06
// NB2 Crystal Beach DMA Engine Fn07
	})
	Name(PRC0, Package(){
// NB3 PCI-E Root Port #0
		Package(){0x0000FFFF, 0, LNKA, 0 },
		Package(){0x0000FFFF, 1, LNKB, 0 },
		Package(){0x0000FFFF, 2, LNKC, 0 },
		Package(){0x0000FFFF, 3, LNKD, 0 },
// NB3 PCI-E Root Port #1
		Package(){0x0001FFFF, 0, LNKA, 0 },
		Package(){0x0001FFFF, 1, LNKB, 0 },
		Package(){0x0001FFFF, 2, LNKC, 0 },
		Package(){0x0001FFFF, 3, LNKD, 0 },
// NB3 PCI-E Root Port #2
// NB3 PCI-E Root Port #3
		Package(){0x0002FFFF, 0, LNKA, 0 },
		Package(){0x0002FFFF, 1, LNKB, 0 },
		Package(){0x0002FFFF, 2, LNKC, 0 },
		Package(){0x0002FFFF, 3, LNKD, 0 },
// NB3 PCI-E Root Port #4
// NB3 PCI-E Root Port #5
// NB3 PCI-E Root Port #6
// NB3 PCI-E Root Port #7
		Package(){0x0003FFFF, 0, LNKA, 0 },
		Package(){0x0003FFFF, 1, LNKB, 0 },
		Package(){0x0003FFFF, 2, LNKC, 0 },
		Package(){0x0003FFFF, 3, LNKD, 0 },
// NB3 PCI-E Root Port #8
// NB3 PCI-E Root Port #9
// NB3 PCI-E Root Port #a
// NB3 Crystal Beach DMA Engine Fn00
		Package(){0x0004FFFF, 0, LNKA, 0 },
// NB3 Crystal Beach DMA Engine Fn01
		Package(){0x0004FFFF, 1, LNKB, 0 },
// NB3 Crystal Beach DMA Engine Fn02
		Package(){0x0004FFFF, 2, LNKC, 0 },
// NB3 Crystal Beach DMA Engine Fn03
		Package(){0x0004FFFF, 3, LNKD, 0 },
// NB3 Crystal Beach DMA Engine Fn04
// NB3 Crystal Beach DMA Engine Fn05
// NB3 Crystal Beach DMA Engine Fn06
// NB3 Crystal Beach DMA Engine Fn07
	})
	Name(ARC0, Package(){
// NB3 PCI-E Root Port #0
		Package(){0x0000FFFF, 0, 0, 96 },
		Package(){0x0000FFFF, 1, 0, 97 },
		Package(){0x0000FFFF, 2, 0, 97 },
		Package(){0x0000FFFF, 3, 0, 97 },
// NB3 PCI-E Root Port #1
		Package(){0x0001FFFF, 0, 0, 98 },
		Package(){0x0001FFFF, 1, 0, 100 },
		Package(){0x0001FFFF, 2, 0, 101 },
		Package(){0x0001FFFF, 3, 0, 102 },
// NB3 PCI-E Root Port #2
// NB3 PCI-E Root Port #3
		Package(){0x0002FFFF, 0, 0, 104 },
		Package(){0x0002FFFF, 1, 0, 108 },
		Package(){0x0002FFFF, 2, 0, 109 },
		Package(){0x0002FFFF, 3, 0, 110 },
// NB3 PCI-E Root Port #4
// NB3 PCI-E Root Port #5
// NB3 PCI-E Root Port #6
// NB3 PCI-E Root Port #7
		Package(){0x0003FFFF, 0, 0, 112 },
		Package(){0x0003FFFF, 1, 0, 116 },
		Package(){0x0003FFFF, 2, 0, 117 },
		Package(){0x0003FFFF, 3, 0, 118 },
// NB3 PCI-E Root Port #8
// NB3 PCI-E Root Port #9
// NB3 PCI-E Root Port #a
// NB3 Crystal Beach DMA Engine Fn00
		Package(){0x0004FFFF, 0, 0, 103 },
// NB3 Crystal Beach DMA Engine Fn01
		Package(){0x0004FFFF, 1, 0, 111 },
// NB3 Crystal Beach DMA Engine Fn02
		Package(){0x0004FFFF, 2, 0, 103 },
// NB3 Crystal Beach DMA Engine Fn03
		Package(){0x0004FFFF, 3, 0, 111 },
// NB3 Crystal Beach DMA Engine Fn04
// NB3 Crystal Beach DMA Engine Fn05
// NB3 Crystal Beach DMA Engine Fn06
// NB3 Crystal Beach DMA Engine Fn07
	})
	Name(PG78, Package(){
// On Board Video
		Package(){0x0000FFFF, 0, LNKA, 0 },
		Package(){0x0000FFFF, 1, LNKB, 0 },
		Package(){0x0000FFFF, 2, LNKC, 0 },
		Package(){0x0000FFFF, 3, LNKD, 0 },
	})
	Name(AG78, Package(){
// On Board Video
		Package(){0x0000FFFF, 0, 0, 16 },
		Package(){0x0000FFFF, 1, 0, 17 },
		Package(){0x0000FFFF, 2, 0, 18 },
		Package(){0x0000FFFF, 3, 0, 19 },
	})


} // end _SB scope

//-------- DO NOT EDIT THIS FILE --------
//
// FILE WAS GENERATED AUTOMATICALY USING AMISDL v7.04.0230 (ËÄÔÂ 25 2018,16:31:29)
//
//-------- DO NOT EDIT THIS FILE --------
//****************************************************************************
//****************************************************************************
//**                                                                        **
//**         (C)Copyright 1985 - 2018, American Megatrends, Inc.            **
//**                                                                        **
//**                          All Rights Reserved.                          **
//**                                                                        **
//**                    5555 Oakbrook Pkwy, Norcross, GA 30092              **
//**                                                                        **
//**                          Phone (770)-246-8600                          **
//**                                                                        **
//****************************************************************************
//****************************************************************************
