















DefinitionBlock (
    "AmiCpuPm.aml",
    "SSDT",
    2,
    "ALASKA",
    "PmMgt",
    1)
{
Scope(\_SB) {










































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































External (\PETE, IntObj) 
External (PSEN, FieldUnitObj)
External (HWEN, FieldUnitObj) 
External (ACEN, FieldUnitObj) 
External (\HWPE, IntObj)

    Name(HWOB, 0) 



    Name(TYPE, 0xFFFFFFFF)  




External (\PSLM, PkgObj)

NAME (HWAL, 0x80)






























Name(ZPSS, Package() {
  Package(){0, 0, 0, 0, 0, 0}
})

Name(PSS0,Package() { Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000} })
Name(PSS1,Package() { Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000} })
Name(PSS2,Package() { Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000} })
Name(PSS3,Package() { Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000}, Package(){0x8000, 0x80000000, 0x8000, 0x8000, 0x8000, 0x8000} })









































































    External (MWOS, FieldUnitObj)
    
    
    
    Name (CMST, Package() {
        4,  
        Package(){ResourceTemplate(){Register(FFixedHW, 1, 2, 0, 1)}, 0x80, 0x80, 0x8000},
        Package(){ResourceTemplate(){Register(FFixedHW, 1, 2, 0x80, 3)}, 0x80, 0x80, 0x8000},
        Package(){ResourceTemplate(){Register(FFixedHW, 1, 2, 0x80, 3)}, 0x80, 0x80, 0x8000},
        Package(){ResourceTemplate(){Register(FFixedHW, 1, 2, 0x80, 3)}, 0x80, 0x80, 0x8000}
    })
    
    
    Name (CIST, Package() {
        4,  
        Package(){ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 0x80, 0x80, 0x8000},
        Package(){ResourceTemplate(){Register(SystemIO, 8, 0, 0x8000)}, 0x80, 0x80, 0x8000},
        Package(){ResourceTemplate(){Register(SystemIO, 8, 0, 0x8000)}, 0x80, 0x80, 0x8000},
        Package(){ResourceTemplate(){Register(SystemIO, 8, 0, 0x8000)}, 0x80, 0x80, 0x8000}
    })
    

    
    Method(CST, 0) {
        If(LAnd(MWOS, And(TYPE, 0x200)))  {
            Return(CMST)    
        }
        return (CIST)       
    }
    
















    






External (\TSLM, PkgObj)
External (TSEN, FieldUnitObj)

    Name(TSSA, Package() {
      Package(){100, 0x80000000, 0, 0x00, 0}
    })
        
    

















    
    
    Name(TSS0, Package() { Package(){100, 0x80000000, 0, 0x00, 0}, Package(){ 94, 0x80000000, 0, 0x1F, 0}, Package(){ 88, 0x80000000, 0, 0x1E, 0}, Package(){ 82, 0x80000000, 0, 0x1D, 0}, Package(){ 75, 0x80000000, 0, 0x1C, 0}, Package(){ 69, 0x80000000, 0, 0x1B, 0}, Package(){ 63, 0x80000000, 0, 0x1A, 0}, Package(){ 57, 0x80000000, 0, 0x19, 0}, Package(){ 50, 0x80000000, 0, 0x18, 0}, Package(){ 44, 0x80000000, 0, 0x17, 0}, Package(){ 38, 0x80000000, 0, 0x16, 0}, Package(){ 32, 0x80000000, 0, 0x15, 0}, Package(){ 25, 0x80000000, 0, 0x14, 0}, Package(){ 19, 0x80000000, 0, 0x13, 0}, Package(){ 13, 0x80000000, 0, 0x12, 0} })
    Name(TSS1, Package() { Package(){100, 0x80000000, 0, 0x00, 0}, Package(){ 94, 0x80000000, 0, 0x1F, 0}, Package(){ 88, 0x80000000, 0, 0x1E, 0}, Package(){ 82, 0x80000000, 0, 0x1D, 0}, Package(){ 75, 0x80000000, 0, 0x1C, 0}, Package(){ 69, 0x80000000, 0, 0x1B, 0}, Package(){ 63, 0x80000000, 0, 0x1A, 0}, Package(){ 57, 0x80000000, 0, 0x19, 0}, Package(){ 50, 0x80000000, 0, 0x18, 0}, Package(){ 44, 0x80000000, 0, 0x17, 0}, Package(){ 38, 0x80000000, 0, 0x16, 0}, Package(){ 32, 0x80000000, 0, 0x15, 0}, Package(){ 25, 0x80000000, 0, 0x14, 0}, Package(){ 19, 0x80000000, 0, 0x13, 0}, Package(){ 13, 0x80000000, 0, 0x12, 0} })
    Name(TSS2, Package() { Package(){100, 0x80000000, 0, 0x00, 0}, Package(){ 94, 0x80000000, 0, 0x1F, 0}, Package(){ 88, 0x80000000, 0, 0x1E, 0}, Package(){ 82, 0x80000000, 0, 0x1D, 0}, Package(){ 75, 0x80000000, 0, 0x1C, 0}, Package(){ 69, 0x80000000, 0, 0x1B, 0}, Package(){ 63, 0x80000000, 0, 0x1A, 0}, Package(){ 57, 0x80000000, 0, 0x19, 0}, Package(){ 50, 0x80000000, 0, 0x18, 0}, Package(){ 44, 0x80000000, 0, 0x17, 0}, Package(){ 38, 0x80000000, 0, 0x16, 0}, Package(){ 32, 0x80000000, 0, 0x15, 0}, Package(){ 25, 0x80000000, 0, 0x14, 0}, Package(){ 19, 0x80000000, 0, 0x13, 0}, Package(){ 13, 0x80000000, 0, 0x12, 0} })
    Name(TSS3, Package() { Package(){100, 0x80000000, 0, 0x00, 0}, Package(){ 94, 0x80000000, 0, 0x1F, 0}, Package(){ 88, 0x80000000, 0, 0x1E, 0}, Package(){ 82, 0x80000000, 0, 0x1D, 0}, Package(){ 75, 0x80000000, 0, 0x1C, 0}, Package(){ 69, 0x80000000, 0, 0x1B, 0}, Package(){ 63, 0x80000000, 0, 0x1A, 0}, Package(){ 57, 0x80000000, 0, 0x19, 0}, Package(){ 50, 0x80000000, 0, 0x18, 0}, Package(){ 44, 0x80000000, 0, 0x17, 0}, Package(){ 38, 0x80000000, 0, 0x16, 0}, Package(){ 32, 0x80000000, 0, 0x15, 0}, Package(){ 25, 0x80000000, 0, 0x14, 0}, Package(){ 19, 0x80000000, 0, 0x13, 0}, Package(){ 13, 0x80000000, 0, 0x12, 0} })































     
    
    
    Method(PDC,1) {
        
        
        
        CreateDWordField(Arg0,8,CAPA)         

        CreateDwordField (Arg0, 0, REVS)
        CreateDwordField (Arg0, 4, SIZE)

        
        
        
        Store (SizeOf (Arg0), Local0)

        
        
        
        Store (Subtract (Local0, 8), Local1)

        
        
        
        CreateField (Arg0, 64, Multiply (Local1, 8), TEMP)

        
        
        
        
        
        Name (STS0, Buffer () {0x00, 0x00, 0x00, 0x00})

        
        
        
        
        Concatenate (STS0, TEMP, Local2)

        OSC (ToUUID("4077A616-290C-47BE-9EBD-D87058713953"), REVS, SIZE, Local2)

    }
    
    Method(OSC, 4)
    {
        
        
        
        CreateDWordField(Arg3,4,CAPA)         
        Store(CAPA, TYPE)                     

        
        CreateDWordField(Arg3, 0, STS0)

        
        CreateDwordField(Arg3, 4, CAP0)

        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        CreateDwordField(Arg0, 0x0, IID0)
        CreateDwordField(Arg0, 0x4, IID1)
        CreateDwordField(Arg0, 0x8, IID2)
        CreateDwordField(Arg0, 0xC, IID3)
        
        
        
        Name(UID0, ToUUID("4077A616-290C-47BE-9EBD-D87058713953"))
        CreateDwordField(UID0, 0x0, EID0)
        CreateDwordField(UID0, 0x4, EID1)
        CreateDwordField(UID0, 0x8, EID2)
        CreateDwordField(UID0, 0xC, EID3)
        
        
        
        If(LNot(LAnd(LAnd(LEqual(IID0, EID0),LEqual(IID1, EID1)),LAnd(LEqual(IID2, EID2),LEqual(IID3, EID3)))))
        {
            
            
            
            Store (0x6, Index (STS0, 0))
            Return (Arg3)
        }

        If(LNot(LEqual(Arg1,1)))
        {
            
            
            
            Store (0xA, Index (STS0, 0))
            Return (Arg3)
        }

        
        
        
        
        
        If(And(STS0,0x01))
        {
            
            
            
            And(CAP0, 0xBFF, CAP0)
            Return (Arg3)
        }
        
        
        
        Store(0, HWOB)  
        If(LEqual(HWEN,2))
        {
            Store(1, HWOB)  
        }
       






        
        And(CAP0, 0xBFF, CAP0)
        Store(CAP0, TYPE)               
        Return (Arg3)
    }















External(\_SB.SCK0.CP00, DeviceObj)
External(\_SB.SCK0.CP01, DeviceObj)
External(\_SB.SCK0.CP02, DeviceObj)
External(\_SB.SCK0.CP03, DeviceObj)
External(\_SB.SCK0.CP04, DeviceObj)
External(\_SB.SCK0.CP05, DeviceObj)
External(\_SB.SCK0.CP06, DeviceObj)
External(\_SB.SCK0.CP07, DeviceObj)
External(\_SB.SCK0.CP08, DeviceObj)
External(\_SB.SCK0.CP09, DeviceObj)
External(\_SB.SCK0.CP0A, DeviceObj)
External(\_SB.SCK0.CP0B, DeviceObj)
External(\_SB.SCK0.CP0C, DeviceObj)
External(\_SB.SCK0.CP0D, DeviceObj)
External(\_SB.SCK0.CP0E, DeviceObj)
External(\_SB.SCK0.CP0F, DeviceObj)
External(\_SB.SCK0.CP10, DeviceObj)
External(\_SB.SCK0.CP11, DeviceObj)
External(\_SB.SCK0.CP12, DeviceObj)
External(\_SB.SCK0.CP13, DeviceObj)
External(\_SB.SCK0.CP14, DeviceObj)
External(\_SB.SCK0.CP15, DeviceObj)
External(\_SB.SCK0.CP16, DeviceObj)
External(\_SB.SCK0.CP17, DeviceObj)
External(\_SB.SCK0.CP18, DeviceObj)
External(\_SB.SCK0.CP19, DeviceObj)
External(\_SB.SCK0.CP1A, DeviceObj)
External(\_SB.SCK0.CP1B, DeviceObj)
External(\_SB.SCK0.CP1C, DeviceObj)
External(\_SB.SCK0.CP1D, DeviceObj)
External(\_SB.SCK0.CP1E, DeviceObj)
External(\_SB.SCK0.CP1F, DeviceObj)
External(\_SB.SCK0.CP20, DeviceObj)
External(\_SB.SCK0.CP21, DeviceObj)
External(\_SB.SCK0.CP22, DeviceObj)
External(\_SB.SCK0.CP23, DeviceObj)
External(\_SB.SCK0.CP24, DeviceObj)
External(\_SB.SCK0.CP25, DeviceObj)
External(\_SB.SCK0.CP26, DeviceObj)
External(\_SB.SCK0.CP27, DeviceObj)
External(\_SB.SCK0.CP28, DeviceObj)
External(\_SB.SCK0.CP29, DeviceObj)
External(\_SB.SCK0.CP2A, DeviceObj)
External(\_SB.SCK0.CP2B, DeviceObj)
External(\_SB.SCK0.CP2C, DeviceObj)
External(\_SB.SCK0.CP2D, DeviceObj)
External(\_SB.SCK0.CP2E, DeviceObj)
External(\_SB.SCK0.CP2F, DeviceObj)

Scope(SCK0.CP00) {
    Name(SCKN, 0)
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP01) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP02) {

    Name(SCKN, 0)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP03) {
    Name(SCKN, 0)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP04) {
    Name(SCKN, 0)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}


Scope(SCK0.CP05) {
    Name(SCKN, 0)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP06) {
    Name(SCKN, 0)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP07) {
    Name(SCKN, 0)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP08) {
    Name(SCKN, 0)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP09) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP0A) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP0B) {
    Name(SCKN, 0)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP0C) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}


Scope(SCK0.CP0D) {
    Name(SCKN, 0)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP0E) {
    Name(SCKN, 0)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP0F) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP10) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP11) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP12) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP13) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP14) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}


Scope(SCK0.CP15) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP16) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP17) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP18) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP19) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP1A) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP1B) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP1C) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}


Scope(SCK0.CP1D) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP1E) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP1F) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP20) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP21) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP22) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP23) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP24) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP25) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP26) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP27) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP28) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP29) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP2A) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP2B) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP2C) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP2D) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP2E) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}

Scope(SCK0.CP2F) {
    Name(SCKN, 0)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS0)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS0)
        }
    

}











External(\_SB.SCK1.CP00, DeviceObj)
External(\_SB.SCK1.CP01, DeviceObj)
External(\_SB.SCK1.CP02, DeviceObj)
External(\_SB.SCK1.CP03, DeviceObj)
External(\_SB.SCK1.CP04, DeviceObj)
External(\_SB.SCK1.CP05, DeviceObj)
External(\_SB.SCK1.CP06, DeviceObj)
External(\_SB.SCK1.CP07, DeviceObj)
External(\_SB.SCK1.CP08, DeviceObj)
External(\_SB.SCK1.CP09, DeviceObj)
External(\_SB.SCK1.CP0A, DeviceObj)
External(\_SB.SCK1.CP0B, DeviceObj)
External(\_SB.SCK1.CP0C, DeviceObj)
External(\_SB.SCK1.CP0D, DeviceObj)
External(\_SB.SCK1.CP0E, DeviceObj)
External(\_SB.SCK1.CP0F, DeviceObj)
External(\_SB.SCK1.CP10, DeviceObj)
External(\_SB.SCK1.CP11, DeviceObj)
External(\_SB.SCK1.CP12, DeviceObj)
External(\_SB.SCK1.CP13, DeviceObj)
External(\_SB.SCK1.CP14, DeviceObj)
External(\_SB.SCK1.CP15, DeviceObj)
External(\_SB.SCK1.CP16, DeviceObj)
External(\_SB.SCK1.CP17, DeviceObj)
External(\_SB.SCK1.CP18, DeviceObj)
External(\_SB.SCK1.CP19, DeviceObj)
External(\_SB.SCK1.CP1A, DeviceObj)
External(\_SB.SCK1.CP1B, DeviceObj)
External(\_SB.SCK1.CP1C, DeviceObj)
External(\_SB.SCK1.CP1D, DeviceObj)
External(\_SB.SCK1.CP1E, DeviceObj)
External(\_SB.SCK1.CP1F, DeviceObj)
External(\_SB.SCK1.CP20, DeviceObj)
External(\_SB.SCK1.CP21, DeviceObj)
External(\_SB.SCK1.CP22, DeviceObj)
External(\_SB.SCK1.CP23, DeviceObj)
External(\_SB.SCK1.CP24, DeviceObj)
External(\_SB.SCK1.CP25, DeviceObj)
External(\_SB.SCK1.CP26, DeviceObj)
External(\_SB.SCK1.CP27, DeviceObj)
External(\_SB.SCK1.CP28, DeviceObj)
External(\_SB.SCK1.CP29, DeviceObj)
External(\_SB.SCK1.CP2A, DeviceObj)
External(\_SB.SCK1.CP2B, DeviceObj)
External(\_SB.SCK1.CP2C, DeviceObj)
External(\_SB.SCK1.CP2D, DeviceObj)
External(\_SB.SCK1.CP2E, DeviceObj)
External(\_SB.SCK1.CP2F, DeviceObj)

Scope(SCK1.CP00) {
    Name(SCKN, 1)
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP01) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP02) {

    Name(SCKN, 1)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP03) {
    Name(SCKN, 1)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP04) {
    Name(SCKN, 1)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}


Scope(SCK1.CP05) {
    Name(SCKN, 1)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP06) {
    Name(SCKN, 1)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP07) {
    Name(SCKN, 1)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP08) {
    Name(SCKN, 1)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP09) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP0A) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP0B) {
    Name(SCKN, 1)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP0C) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}


Scope(SCK1.CP0D) {
    Name(SCKN, 1)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP0E) {
    Name(SCKN, 1)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP0F) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP10) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP11) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP12) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP13) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP14) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}


Scope(SCK1.CP15) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP16) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP17) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP18) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP19) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP1A) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP1B) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP1C) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}


Scope(SCK1.CP1D) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP1E) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP1F) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP20) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP21) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP22) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP23) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP24) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP25) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP26) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP27) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP28) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP29) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP2A) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP2B) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP2C) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP2D) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP2E) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}

Scope(SCK1.CP2F) {
    Name(SCKN, 1)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS1)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS1)
        }
    

}












External(\_SB.SCK2.CP00, DeviceObj)
External(\_SB.SCK2.CP01, DeviceObj)
External(\_SB.SCK2.CP02, DeviceObj)
External(\_SB.SCK2.CP03, DeviceObj)
External(\_SB.SCK2.CP04, DeviceObj)
External(\_SB.SCK2.CP05, DeviceObj)
External(\_SB.SCK2.CP06, DeviceObj)
External(\_SB.SCK2.CP07, DeviceObj)
External(\_SB.SCK2.CP08, DeviceObj)
External(\_SB.SCK2.CP09, DeviceObj)
External(\_SB.SCK2.CP0A, DeviceObj)
External(\_SB.SCK2.CP0B, DeviceObj)
External(\_SB.SCK2.CP0C, DeviceObj)
External(\_SB.SCK2.CP0D, DeviceObj)
External(\_SB.SCK2.CP0E, DeviceObj)
External(\_SB.SCK2.CP0F, DeviceObj)
External(\_SB.SCK2.CP10, DeviceObj)
External(\_SB.SCK2.CP11, DeviceObj)
External(\_SB.SCK2.CP12, DeviceObj)
External(\_SB.SCK2.CP13, DeviceObj)
External(\_SB.SCK2.CP14, DeviceObj)
External(\_SB.SCK2.CP15, DeviceObj)
External(\_SB.SCK2.CP16, DeviceObj)
External(\_SB.SCK2.CP17, DeviceObj)
External(\_SB.SCK2.CP18, DeviceObj)
External(\_SB.SCK2.CP19, DeviceObj)
External(\_SB.SCK2.CP1A, DeviceObj)
External(\_SB.SCK2.CP1B, DeviceObj)
External(\_SB.SCK2.CP1C, DeviceObj)
External(\_SB.SCK2.CP1D, DeviceObj)
External(\_SB.SCK2.CP1E, DeviceObj)
External(\_SB.SCK2.CP1F, DeviceObj)
External(\_SB.SCK2.CP20, DeviceObj)
External(\_SB.SCK2.CP21, DeviceObj)
External(\_SB.SCK2.CP22, DeviceObj)
External(\_SB.SCK2.CP23, DeviceObj)
External(\_SB.SCK2.CP24, DeviceObj)
External(\_SB.SCK2.CP25, DeviceObj)
External(\_SB.SCK2.CP26, DeviceObj)
External(\_SB.SCK2.CP27, DeviceObj)
External(\_SB.SCK2.CP28, DeviceObj)
External(\_SB.SCK2.CP29, DeviceObj)
External(\_SB.SCK2.CP2A, DeviceObj)
External(\_SB.SCK2.CP2B, DeviceObj)
External(\_SB.SCK2.CP2C, DeviceObj)
External(\_SB.SCK2.CP2D, DeviceObj)
External(\_SB.SCK2.CP2E, DeviceObj)
External(\_SB.SCK2.CP2F, DeviceObj)

Scope(SCK2.CP00) {
    Name(SCKN, 2)
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP01) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP02) {

    Name(SCKN, 2)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP03) {
    Name(SCKN, 2)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP04) {
    Name(SCKN, 2)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}


Scope(SCK2.CP05) {
    Name(SCKN, 2)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP06) {
    Name(SCKN, 2)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP07) {
    Name(SCKN, 2)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP08) {
    Name(SCKN, 2)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP09) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP0A) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP0B) {
    Name(SCKN, 2)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP0C) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}


Scope(SCK2.CP0D) {
    Name(SCKN, 2)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP0E) {
    Name(SCKN, 2)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP0F) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP10) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP11) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP12) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP13) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP14) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}


Scope(SCK2.CP15) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP16) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP17) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP18) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP19) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP1A) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP1B) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP1C) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}


Scope(SCK2.CP1D) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP1E) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP1F) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP20) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP21) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP22) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP23) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP24) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP25) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP26) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP27) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP28) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP29) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP2A) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP2B) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP2C) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP2D) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP2E) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}

Scope(SCK2.CP2F) {
    Name(SCKN, 2)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS2)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS2)
        }
    

}











External(\_SB.SCK3.CP00, DeviceObj)
External(\_SB.SCK3.CP01, DeviceObj)
External(\_SB.SCK3.CP02, DeviceObj)
External(\_SB.SCK3.CP03, DeviceObj)
External(\_SB.SCK3.CP04, DeviceObj)
External(\_SB.SCK3.CP05, DeviceObj)
External(\_SB.SCK3.CP06, DeviceObj)
External(\_SB.SCK3.CP07, DeviceObj)
External(\_SB.SCK3.CP08, DeviceObj)
External(\_SB.SCK3.CP09, DeviceObj)
External(\_SB.SCK3.CP0A, DeviceObj)
External(\_SB.SCK3.CP0B, DeviceObj)
External(\_SB.SCK3.CP0C, DeviceObj)
External(\_SB.SCK3.CP0D, DeviceObj)
External(\_SB.SCK3.CP0E, DeviceObj)
External(\_SB.SCK3.CP0F, DeviceObj)
External(\_SB.SCK3.CP10, DeviceObj)
External(\_SB.SCK3.CP11, DeviceObj)
External(\_SB.SCK3.CP12, DeviceObj)
External(\_SB.SCK3.CP13, DeviceObj)
External(\_SB.SCK3.CP14, DeviceObj)
External(\_SB.SCK3.CP15, DeviceObj)
External(\_SB.SCK3.CP16, DeviceObj)
External(\_SB.SCK3.CP17, DeviceObj)
External(\_SB.SCK3.CP18, DeviceObj)
External(\_SB.SCK3.CP19, DeviceObj)
External(\_SB.SCK3.CP1A, DeviceObj)
External(\_SB.SCK3.CP1B, DeviceObj)
External(\_SB.SCK3.CP1C, DeviceObj)
External(\_SB.SCK3.CP1D, DeviceObj)
External(\_SB.SCK3.CP1E, DeviceObj)
External(\_SB.SCK3.CP1F, DeviceObj)
External(\_SB.SCK3.CP20, DeviceObj)
External(\_SB.SCK3.CP21, DeviceObj)
External(\_SB.SCK3.CP22, DeviceObj)
External(\_SB.SCK3.CP23, DeviceObj)
External(\_SB.SCK3.CP24, DeviceObj)
External(\_SB.SCK3.CP25, DeviceObj)
External(\_SB.SCK3.CP26, DeviceObj)
External(\_SB.SCK3.CP27, DeviceObj)
External(\_SB.SCK3.CP28, DeviceObj)
External(\_SB.SCK3.CP29, DeviceObj)
External(\_SB.SCK3.CP2A, DeviceObj)
External(\_SB.SCK3.CP2B, DeviceObj)
External(\_SB.SCK3.CP2C, DeviceObj)
External(\_SB.SCK3.CP2D, DeviceObj)
External(\_SB.SCK3.CP2E, DeviceObj)
External(\_SB.SCK3.CP2F, DeviceObj)

Scope(SCK3.CP00) {
    Name(SCKN, 3)
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP01) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP02) {

    Name(SCKN, 3)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP03) {
    Name(SCKN, 3)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP04) {
    Name(SCKN, 3)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}


Scope(SCK3.CP05) {
    Name(SCKN, 3)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP06) {
    Name(SCKN, 3)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP07) {
    Name(SCKN, 3)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP08) {
    Name(SCKN, 3)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP09) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP0A) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP0B) {
    Name(SCKN, 3)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP0C) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}


Scope(SCK3.CP0D) {
    Name(SCKN, 3)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP0E) {
    Name(SCKN, 3)

    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP0F) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP10) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP11) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP12) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP13) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP14) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}


Scope(SCK3.CP15) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP16) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP17) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP18) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP19) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP1A) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP1B) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP1C) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}


Scope(SCK3.CP1D) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP1E) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP1F) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP20) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP21) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP22) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP23) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP24) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP25) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP26) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP27) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP28) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP29) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP2A) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP2B) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP2C) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP2D) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP2E) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}

Scope(SCK3.CP2F) {
    Name(SCKN, 3)
    
    Method(_PDC,1) {
       PDC(Arg0)
    }

    Method(_OSC, 4)
    {
        return (OSC(Arg0, Arg1, Arg2, Arg3))
    }


    












































    
    
    
    
    
    
    
    
    
    
    
    
    
    Name (PSDC, Package(){Package(){5, 0, 1, 0xFC, 1}}) 
    Name (PSDD, Package(){Package(){5, 0, 1, 0xFD, 1}}) 
    Name (PSDE, Package(){Package(){5, 0, 1, 0xFE, 1}}) 
    
    Method(_PPC, 0) 
    {
    
          Or(PETE, 0x80, PETE) 
          Return(DeRefOf(Index(\PSLM, SCKN))) 
    


    }
    
    Method(_PSD,0) {    
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x820), LEqual(HWAL, 0))) {
          Return(PSDE)
      }
    
      
      If (LAnd(LEqual(And(TYPE, 0x820), 0x20), LEqual(HWAL, 2))) {
          Return(PSDD)
      }
    
      
      Return(PSDC)
    } 
    
    
    
    Method(_PSS,0)      
    {
          If (PSEN)
          {
            If(LEqual(HWOB,0)){ 
              Return (PSS3)
            }
          }
        Return (ZPSS)
    }
    
    
    Name(_PCT, Package()    
    {
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}, 
          ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}  
    })
    
    


    
    
































    
      Name (CST1, Package() {     
        1,
        Package() {ResourceTemplate() {Register(FFixedHW, 0, 0, 0)}, 1, 1, 0x3f8},
        })
    
    Method(_CST, 0) 
    {
       If(LEqual(ACEN,0)){
        return (CST())
        }
        return(CST1)                  
    }
    
    
        


    
    

































        Method(_TPC, 0)
        {
    
            Or(PETE, 0x40, PETE) 
            Return(DeRefOf(Index(\TSLM, SCKN))) 
    


        }
    
        
        
        
        Method(_PTC, 0)
        {
            Return(Package() {
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)},
                ResourceTemplate(){Register(FFixedHW, 0, 0, 0)}
            })
        }
    
        Method(_TSS, 0)
        {
            If (LOr(LEqual(TSEN, 0), LEqual(PSEN, 0))) {
                return (TSSA)
            }
            return (TSS3)
        }
    

}


}
}
