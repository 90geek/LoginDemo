## @file
# This module produces the Metronome Architectural Protocol on top of Timer Library.
#
# This is a generic implementation of the Metronome Architectural Protocol that
# layers on top of an instance of the Timer Library.  The Timer Library provides
# functions for nanosecond and microsecond delays.  This generic implementation
# produces a fixed TickPeriod of 100ns unit, and when the WaitForTick() service
# is called, the number of ticks passed in is converted to either nanosecond or
# microsecond units.  If the number of ticks is small, then nanoseconds are used.
# If the number of ticks is large, then microseconds are used.  This prevents
# overflows that could occur for long delays if only nanoseconds were used and also
# provides the greatest accuracy for small delays.
#
# Copyright (c) 2008 - 2010, Intel Corporation. All rights reserved.<BR>
# This program and the accompanying materials
# are licensed and made available under the terms and conditions of the BSD License
# which accompanies this distribution.  The full text of the license may be found at
# http://opensource.org/licenses/bsd-license.php
#
# THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
# WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#
##

# DO NOT EDIT
# FILE auto-generated

[Defines]
  INF_VERSION                = 0x00010017
  BASE_NAME                  = Metronome
  FILE_GUID                  = C8339973-A563-4561-B858-D8476F9DEFC4
  MODULE_TYPE                = DXE_DRIVER
  VERSION_STRING             = 1.0
  ENTRY_POINT                = InstallMetronome

[Packages.X64]
  MdePkg/MdePkg.dec
  AmiModulePkg/AmiModulePkg.dec

[Binaries.X64]
  PE32|Metronome.efi
  DXE_DEPEX|Metronome.depex

[PatchPcd.X64]

[Protocols.X64]
  ## PRODUCES
  gEfiMetronomeArchProtocolGuid

  ## SOMETIMES_CONSUMES
  gPcdProtocolGuid

  ## CONSUMES
  gEfiPcdProtocolGuid

  ## SOMETIMES_CONSUMES
  gGetPcdInfoProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiGetPcdInfoProtocolGuid

  ## CONSUMES
  gAmiDebugServiceProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiLoadedImageProtocolGuid


[Ppis.X64]

[Guids.X64]

[PcdEx.X64]

[LibraryClasses.X64]
## @LIB_INSTANCES
#  MdePkg/Library/UefiBootServicesTableLib/UefiBootServicesTableLib.inf
#  MdePkg/Library/BaseLib/BaseLib.inf
#  MdePkg/Library/BaseMemoryLibRepStr/BaseMemoryLibRepStr.inf
#  MdePkg/Library/DxePcdLib/DxePcdLib.inf
#  AmiModulePkg/Library/DxeAmiDebugLib/DxeAmiDebugLib.inf
#  MdePkg/Library/BaseIoLibIntrinsic/BaseIoLibIntrinsic.inf
#  MdePkg/Library/BasePciExpressLib/BasePciExpressLib.inf
#  MdePkg/Library/BasePciLibPciExpress/BasePciLibPciExpress.inf
#  MdePkg/Library/UefiDriverEntryPoint/UefiDriverEntryPoint.inf
#  GrantleyPkg/Library/IntelIchAcpiTimerLib/IntelIchAcpiTimerLib.inf

[Depex.X64]
#  (TRUE) AND (gEfiPcdProtocolGuid) AND (gEfiPcdProtocolGuid) AND (gEfiPcdProtocolGuid) AND (gEfiPcdProtocolGuid) AND (gEfiBdsArchProtocolGuid AND gEfiCpuArchProtocolGuid AND gEfiMetronomeArchProtocolGuid AND gEfiMonotonicCounterArchProtocolGuid AND gEfiRealTimeClockArchProtocolGuid AND gEfiResetArchProtocolGuid AND gEfiRuntimeArchProtocolGuid AND gEfiSecurityArchProtocolGuid AND gEfiTimerArchProtocolGuid AND gEfiVariableWriteArchProtocolGuid AND gEfiVariableArchProtocolGuid AND gEfiWatchdogTimerArchProtocolGuid)

#
# The following information is for reference only and not required by the build tools.
#
#  VALID_ARCHITECTURES           = IA32 X64 IPF EBC
#

[BuildOptions.X64]
## @AsBuilt
##   MSFT:RELEASE_MYTOOLS_X64_SYMRENAME_FLAGS = Symbol renaming not needed for
##   MSFT:RELEASE_MYTOOLS_X64_CBINDLINK_FLAGS = /nologo /NODEFAULTLIB /NOENTRY /DLL /ALIGN:16
##   MSFT:RELEASE_MYTOOLS_X64_ASLDLINK_FLAGS = /nologo /NODEFAULTLIB /ENTRY:ReferenceAcpiTable /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER
##   MSFT:RELEASE_MYTOOLS_X64_VFR_FLAGS = -n
##   MSFT:RELEASE_MYTOOLS_X64_PP_FLAGS = /nologo /E /TC /FIAutoGen.h
##   MSFT:RELEASE_MYTOOLS_X64_GENFW_FLAGS = 
##   MSFT:RELEASE_MYTOOLS_X64_DLINK_FLAGS = /Machine:AMD64 /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.data=.text /MERGE:.rdata=.text /IGNORE:4254
##   MSFT:RELEASE_MYTOOLS_X64_SLINK_FLAGS = /nologo /LTCG
##   MSFT:RELEASE_MYTOOLS_X64_ASM_FLAGS = /nologo /c /WX /W3 /Cx /Zd
##   MSFT:RELEASE_MYTOOLS_X64_ASL_FLAGS = 
##   MSFT:RELEASE_MYTOOLS_X64_CC_FLAGS = -DEFIx64 -DEFIX64 /nologo /c /WX /GS- /W3 /Gs32768 /Gy /D UNICODE /GL /FIAutoGen.h /EHs-c- /GR- /GF -D PI_SPECIFICATION_VERSION=0x1001E -D EFI_SPECIFICATION_VERSION=0x20028 /wd4819 /O1ib2  -DMDEPKG_NDEBUG  /D CRB_FLAG /D VFR_CRB_FLAG /D EXTERNAL_PACKAGE /D SSA_FLAG /D SSA_LOADER_FLAG /D HSX_HOST  /D BDX_HOST /D LT_FLAG /DTRAD_FLAG=1 /DPCH_SERVER_BIOS_FLAG=1 /DPCH_SERVER_BIOS_FLAG=1 /DME_SUPPORT_FLAG=1 /DSPS_SUPPORT=1 /DPFAT_FLAG=1 /D AMI_PAM_SAVE_RESTORE_SWSMI_VALUE=0xBE /D AMI_PAM_SAVE_CMD=0xE0 /D AMI_PAM_RESTORE_CMD=0xE1 /DUSB_PRECONDITION_ENABLE_FLAG=1 /DWDT_SUPPORT_ENABLED=1
##   MSFT:RELEASE_MYTOOLS_X64_VFRPP_FLAGS = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h -D PI_SPECIFICATION_VERSION=0x1001E -D EFI_SPECIFICATION_VERSION=0x20028 /wd4819 /O1ib2  -DMDEPKG_NDEBUG  /D CRB_FLAG /D VFR_CRB_FLAG /D EXTERNAL_PACKAGE /D SSA_FLAG /D SSA_LOADER_FLAG /D HSX_HOST  /D BDX_HOST /D LT_FLAG /DTRAD_FLAG=1 /DPCH_SERVER_BIOS_FLAG=1 /DPCH_SERVER_BIOS_FLAG=1 /DME_SUPPORT_FLAG=1 /DSPS_SUPPORT=1 /DPFAT_FLAG=1 /D AMI_PAM_SAVE_RESTORE_SWSMI_VALUE=0xBE /D AMI_PAM_SAVE_CMD=0xE0 /D AMI_PAM_RESTORE_CMD=0xE1 /DUSB_PRECONDITION_ENABLE_FLAG=1 /DWDT_SUPPORT_ENABLED=1
##   MSFT:RELEASE_MYTOOLS_X64_ASLCC_FLAGS = /nologo /c /TC /FIAutoGen.h /Dmain=ReferenceAcpiTable
##   MSFT:RELEASE_MYTOOLS_X64_CBINCC_FLAGS = /nologo /c /TC /Os /FIAutoGen.h
##   MSFT:RELEASE_MYTOOLS_X64_MAKE_FLAGS = /nologo -s
##   MSFT:RELEASE_MYTOOLS_X64_OPTROM_FLAGS = -e
##   MSFT:RELEASE_MYTOOLS_X64_NASMB_FLAGS = -f bin
##   MSFT:RELEASE_MYTOOLS_X64_ASLPP_FLAGS = /nologo /EP /TC
##   MSFT:RELEASE_MYTOOLS_X64_OBJCOPY_FLAGS = objcopy not needed for
##   MSFT:RELEASE_MYTOOLS_X64_APP_FLAGS = /nologo /E /TC
##   MSFT:RELEASE_MYTOOLS_X64_ASMLINK_FLAGS = /nologo /tiny
##   MSFT:RELEASE_MYTOOLS_X64_NASM_FLAGS = -Ox -f win64
