TOKEN
    Name  = "SecureMod_SUPPORT"
    Value  = "1"
    TokenType = Boolean
    TargetMAK = Yes
    TargetH = Yes
    Master = Yes
    Token = "AmiCryptoPkg_SUPPORT" "=" "1"
End

TOKEN
    Name  = "SECURE_FLASH_MODULE_REVISION"
    Value  = "17"
    Help  = "Version of Secure Flash module interfaces"
    TokenType = Integer
    TargetMAK = Yes
    TargetH = Yes
End

TOKEN
    Name  = "CREATE_FWCAPSULE"
    Value  = "1"
    Help  = "Mode selector for creating digitally signed Aptio FW Capsule, used in Protected Flash Updates and Recovery.\0 - Don't prepare Aptio FW Capsule, only link Secure Flash interfaces;\1 - Create Signed Aptio FW Capsule with Ami test FW keys linked to a project;\2 - Skip final FW Capsule signing process, e.g hand off this task to signing server."
    TokenType = Integer
    TargetMAK = Yes
    Range  = "0-1-2"
End

TOKEN
    Name  = "====FWCAPSULE FORMAT TUNE-UP===="
    Value  = "=============================="
    TokenType = Expression
End

TOKEN
    Name  = "FWCAPSULE_BUILD_TARGET"
    Value  = "End"
    Help  = "Name of the make target to link Fw Capsule build rules with"
    TokenType = Expression
    TargetMAK = Yes
End

TOKEN
    Name  = "FWCAPSULE_FILE_FORMAT"
    Value  = "0"
    Help  = "0 - Include Aptio FW Signature Block inside the BIOS ROM as a ROM Hole Ffs.\1 - FW Signature Block is attached on top of BIOS Image."
    TokenType = Integer
    TargetMAK = Yes
    TargetH = Yes
End

TOKEN
    Name  = "FWCAPSULE_CERT_FORMAT"
    Value  = "0"
    Help  = "0 - FwCapsule Hdr includes UEFI RSA2048_SHA256 Certificates\1 - PKCS#7 Certificate. Signer keys expected in PKCS#12.pfx and X.509.cer"
    TokenType = Integer
    TargetMAK = Yes
    TargetH = Yes
End

TOKEN
    Name  = "UNSIGNED_BIOS_ROM"
    Value = $(ROM_FILE_NAME)
    Help  = "File name of the BIOS image to be signed."
    TokenType = Expression
    Token = "AMI_PKG_VERSION" ">" "20"
    TargetMAK = Yes
End

TOKEN
    Name  = "FWCAPSULE_FILE_NAME"
    Value  = "$(PROJECT_TAG).BIN"
    Help  = "Signed BIOS file name. FwCapsule Hdr with the Signature is embedded inside the BIOS ROM.\Warning!!! Default Recovery image name is set by PCD:PcdRecoveryImageName"
    TokenType = Expression
    TargetMAK = Yes
    TargetH = Yes
    Token = "FWCAPSULE_FILE_FORMAT" "=" "0"
End

TOKEN
    Name  = "FWCAPSULE_FILE_NAME"
    Value  = "$(PROJECT_TAG).CAP"
    Help  = "Signed BIOS file name. FwCapsule Hdr is attached on top of BIOS ROM.\Warning!!! Default Recovery image name is set by PCD:PcdRecoveryImageName"
    TokenType = Expression
    TargetMAK = Yes
    TargetH = Yes
    Token = "FWCAPSULE_FILE_FORMAT" "=" "1"
End

TOKEN
    Name  = "FWCAPSULE_IMAGE_ALLIGN"
    Value  = "4096"
    Help  = "Aptio FW Capsule Header alignment value"
    TokenType = Integer
    TargetMAK = Yes
    TargetH = Yes
    Range  = "Min FW Capsule file size alignment is 512"
    Token = "FWCAPSULE_FILE_FORMAT" "=" "1"
End

TOKEN
    Name  = "FWCAPSULE_MAX_HDR_SIZE"
    Value  = "4096"
    Help  = "Max size of embedded FwCapsule Header file"
    TokenType = Integer
    TargetMAK = Yes
    TargetH = Yes
    Range  = "Min FW Capsule Header size is 2048"
End

TOKEN
    Name  = "FWCAPSULE_IMAGE_SIZE"
    Value  = "$(FLASH_SIZE)+0x4000"
    Help  = "This is the max size of expected signed BIOS image with up to 16kb FwCapsule Hdr attached"
    TokenType = Integer
    TargetH = Yes
End

TOKEN
    Name  = "FWSIG_PADDING"
    Value  = "0"
    Help  = "RSA Signature padding scheme.0-PKCS1v1.5, 1-PSS, 2-xx reserved\Only relevant with FWCAPSULE_CERT_FORMAT=0"
    TokenType = Integer
End

TOKEN
    Name  = "FWKEY_FILE_FORMAT"
    Value  = "1"
    Help  = "Data format of Root FW Key FFS inside BIOS RTU (FV_BB).\0-n-modulus of RSA2048 key, 1-SHA256 Hash of RSA2048 n-modulus or tbs section of x.509,\2-x.509 DER Certificate key, 3-xx reserved"
    Lock = yes
    TokenType = Integer
    TargetMAK = Yes
    TargetFDF = Yes
End

TOKEN
    Name  = "FWKEY_FILE_REPLACE"
    Value  = "1"
    Help  = "Insert Cryptocon.exe command to replace existing FW Key inside BIOS RTU (FV_BB) with the FwCapsule signing key"
    TokenType = Integer
    TargetMAK = Yes
End


TOKEN
    Name  = "ENABLE_SECURE_FLASH_INFO_PAGE"
    Value  = "0"
    Help  = "Enable Setup Page with Secure Flash status.Only available in Debug builds"
    TokenType = Boolean
    TargetH = Yes
End

TOKEN
    Name  = "ENABLE_SECURE_FLASH_INFO_PAGE"
    Value  = "1"
    TokenType = Boolean
    TargetH = Yes
    Token = "DEBUG_MODE" "=" "1"    
End

TOKEN
    Name  = "ROM_LAYOUT_EX"
    Value  = "$(BUILD_DIR)$(PATH_SLASH)RomLayoutEx.bin"
    Help  = "Name of the extended rom map file used to sign ROM image"
    TokenType = Expression
    TargetMAK = Yes
End

PATH
    Name  = "SecureMod_DIR"
End

MODULE
    File  = "SecureFlash.mak"
    Token = "CREATE_FWCAPSULE" "!=" "0"    
End

ELINK
    Name  = "AmiModulePkg/SecureFlash/FdfRules.txt"
    Parent  = "FdfRules"
    InvokeOrder = AfterParent
End

ELINK
    Name  = "CRYPTOCON_CMDLINE"
    InvokeOrder = ReplaceParent
    Help  = "Cryptocon.exe command line to create signed FwCapsule"
End

ELINK
    Name  = "CRYPTOCON_CMDLINE_SIG"
    InvokeOrder = ReplaceParent
    Help  = "Cryptocon.exe command line to create signed FwCapsule"
End

ELINK
    Name  = "CRYPTOCON_CMDLINE_MAP"
    InvokeOrder = ReplaceParent
    Help  = "Cryptocon.exe command line to prepare embedded signature block FwCapsule"
End

ELINK
    Name  = "-c $(FWrootKey) -k $(FWpriv)"
    Parent  = "CRYPTOCON_CMDLINE"
    Token = "FWCAPSULE_CERT_FORMAT" "=" "0"
    InvokeOrder = AfterParent
End

ELINK
    Name  = "-c2 -x $(FWpriv),$(FW_PFX_Password)"
    Parent  = "CRYPTOCON_CMDLINE"
    Token = "FWCAPSULE_CERT_FORMAT" "=" "1"
    InvokeOrder = AfterParent
End

ELINK
    Name  = "-m -r $(ROM_LAYOUT_EX)"
    Parent  = "CRYPTOCON_CMDLINE_MAP"
    InvokeOrder = AfterParent
    Token = "AMI_CRYPTOPACKAGE_MODULE_REVISION" ">" "18"
End

ELINK
    Name  = "-c2 -r $(ROM_LAYOUT_EX)"
    Parent  = "CRYPTOCON_CMDLINE_MAP"
    InvokeOrder = AfterParent
    Token = "AMI_CRYPTOPACKAGE_MODULE_REVISION" "<" "19"
End

ELINK
    Name  = "-q"
    Parent  = "CRYPTOCON_CMDLINE_MAP"
    Token = "FWCAPSULE_CERT_FORMAT" "=" "0"
    Help  = "Extended FwCapsule Hdr Signature Calculation scheme"
    InvokeOrder = AfterParent
End

ELINK
    Name  = "-y"
    Parent  = "CRYPTOCON_CMDLINE_MAP"
    Token = "FWCAPSULE_FILE_FORMAT" "=" "0"
    InvokeOrder = AfterParent
End

ELINK
    Name  = "-l $(FWCAPSULE_IMAGE_ALLIGN)"
    Parent  = "CRYPTOCON_CMDLINE_MAP"
    Token = "FWCAPSULE_FILE_FORMAT" "=" "1"
    InvokeOrder = AfterParent
End

ELINK
    Name  = "-p"
    Parent  = "CRYPTOCON_CMDLINE_MAP"
    Help  = "RSA-PSS Signature padding scheme. (Default - PKCS#1v1.5)"
    Token = "FWCAPSULE_CERT_FORMAT" "=" "0"
    Token = "FWSIG_PADDING" "=" "1"
    InvokeOrder = AfterParent
End

ELINK
    Name  = "-n"
    Parent  = "CRYPTOCON_CMDLINE_SIG"
    Help  = "directive to replace default Platform Key inside BIOS.ROM with the public portion of the Sign key -k"
    Token = "FWKEY_FILE_REPLACE" "=" "1"
    Token = "FWCAPSULE_CERT_FORMAT" "=" "0"
    InvokeOrder = AfterParent
End

ELINK
    Name  = "-n -k $(FWpub)"
    Parent  = "CRYPTOCON_CMDLINE_SIG"
    Token = "FWKEY_FILE_REPLACE" "=" "1"
    Token = "FWCAPSULE_CERT_FORMAT" "=" "1"
    InvokeOrder = AfterParent
End

ELINK
    Name  = "$(CRYPTOCON_CMDLINE) -f $(UNSIGNED_BIOS_ROM) -o $(FWCAPSULE_FILE_NAME)"
    Parent  = "CRYPTOCON_CMDLINE_SIG"
    InvokeOrder = AfterParent
End

ELINK
    Name  = "$(CRYPTOCON_CMDLINE) -f $(UNSIGNED_BIOS_ROM) -o $(UNSIGNED_BIOS_ROM)"
    Parent  = "CRYPTOCON_CMDLINE_MAP"
    InvokeOrder = AfterParent
End

INFComponent
    Name  = "FwCapsuleHdr"
    File  = "FwCapsuleHdr.inf"
    Package  = "AmiModulePkg"
    ModuleTypes  = "USER_DEFINED"
End

FFS_FILE
    Name  = "FwCapsuleHdr"
    FD_AREA  = "FV_MAIN"
    INFComponent  = "AmiModulePkg.FwCapsuleHdr"
    Rule_Override  = "SubtypeGuidUncompressedUnchecksummed"
    Token = "NESTED_FV_MAIN" "=" "0"
    Token = "CREATE_FWCAPSULE" "!=" "0"
End

FFS_FILE
    Name  = "FwCapsuleHdr"
    FD_AREA  = "FV_MAIN_WRAPPER"
    INFComponent  = "AmiModulePkg.FwCapsuleHdr"
    Rule_Override  = "SubtypeGuidUncompressedUnchecksummed"
    Token = "NESTED_FV_MAIN" "=" "1"
    Token = "CREATE_FWCAPSULE" "!=" "0"
End

ELINK
    Name  = "ITEM_CALLBACK(SECURITY_FORM_SET_CLASS,0,SECURE_FLASH_MENU_REFRESH,SecureFlashModeCallback),"
    Parent  = "SetupItemCallbacks"
    InvokeOrder = AfterParent
    Token = "ENABLE_SECURE_FLASH_INFO_PAGE" "=" "1"
End

ELINK
    Name  = "$(SecureMod_DIR)/SecureFlash.uni"
    Parent  = "SetupStringFiles"
    Token = "ENABLE_SECURE_FLASH_INFO_PAGE" "=" "1"
    InvokeOrder = AfterParent
End

ELINK
    Name  = "$(SecureMod_DIR)/SecureFlash.sd"
    Parent  = "SETUP_DEFINITIONS"
    Token = "ENABLE_SECURE_FLASH_INFO_PAGE" "=" "1"
    InvokeOrder = AfterParent
End

ELINK
    Name  = "$(SecureMod_DIR)/SecureFlash.c"
    Parent  = "SetupCallbackFiles"
    InvokeOrder = AfterParent
    Token = "ENABLE_SECURE_FLASH_INFO_PAGE" "=" "1" 
End

ELINK
    Name  = "AmiCryptoPkg/AmiCryptoPkg.dec"
    Parent  = "AdditionalSetupPackages"
    InvokeOrder = AfterParent    
End

ELINK
    Name  = "gAmiDigitalSignatureProtocolGuid"
    Parent  = "AdditionalSetupProtocols"
    InvokeOrder = AfterParent
End

ELINK
    Name  = "gEfiCertX509Guid"
    Parent  = "AdditionalSetupGuids"
    InvokeOrder = AfterParent    
End

ELINK
    Name  = "gEfiCertSha256Guid"
    Parent  = "AdditionalSetupGuids"
    InvokeOrder = AfterParent    
End

ELINK
    Name  = "gEfiCertRsa2048Guid"
    Parent  = "AdditionalSetupGuids"
    InvokeOrder = AfterParent    
End

ELINK
    Name  = "gEfiHashAlgorithmSha256Guid"
    Parent  = "AdditionalSetupGuids"
    InvokeOrder = AfterParent    
End
